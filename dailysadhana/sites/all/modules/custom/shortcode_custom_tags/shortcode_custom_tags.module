<?php

/**
 * Implements hook_shortcode_info().
 * Define our shortcodes and their titles, descriptions, and callback functions
 *
 * See comments below for explanation
 */
function shortcode_custom_tags_shortcode_info() {

    $shortcodes['quizinput'] = array(
        'title' => t('Quiz Text Box'),
        'description' => t('Generating input field to answer the quiz questions.'),
        'process callback' => 'shortcode_custom_tags_shortcode_quizinput',
        // todo: implements this.
        // 'settings callback' => '_shortcode_settings_form',
        'attributes callback' => 'shortcode_custom_tags_quizinput_attributes',
        'tips callback' => 'shortcode_custom_tags_shortcode_quizinput_tip',
        );

    return $shortcodes;
}

/**
 * Implements hook_tags_theme().
 * Define our variables (parameters) for each shortcode
 */
function shortcode_custom_tags_theme() {
  return array(
    'shortcode_quizinput' => array(
      'variables' => array(
        'class' => '',
        'tag' => 'input',
        'type' => 'text',
        'name' => 'ans',
        'text' => '',
        ),
      ),
    );
}

/**
 * Provides tip callback for quizinput Shortcode.
 */
function shortcode_custom_tags_shortcode_quizinput_tip($format, $long) {
    $output = array();
    $output[] = '<p><strong>' . t('[quizinput (type=textbox)][/quizinput]') . '</strong>';
    if ($long) {
        $output[] = t('Inserts a form input to enter answers for the quiz questions like "fill in the blanks".') . '</p>';
        $output[] = '<p>&nbsp;</p>';
    }

    return implode(' ', $output);
}

/**
 * Attributes form element for quizinput shortcode.
 *
 * Used by shortcode_wysiwyg module to add form elements for attributes.
 */
function shortcode_custom_tags_quizinput_attributes($form, &$form_state) {

    $form['quizinput-type'] = array(
        '#title' => t('Input Type'),
        '#type' => 'select',
        '#options' => array(
            'textbox' => 'Text Box',
            ),
        '#states' => array(
          'visible' => array(
            ':input[name="shortcode"]' => array('value' => 'quizinput'),
            ),
          ),
        );

    return $form;
}

/**
 * Provides process callback for quizinput Shortcode.
 */
function shortcode_custom_tags_shortcode_quizinput($attrs, $text) {

    $attrs = shortcode_attrs(array(
      'type' => 'text',
      ),
    $attrs
    );

    $class = 'quizinput';
    $tag = ''; $type = '';

    switch ($attrs['type']) {
        case 'textbox':
        $tag = 'input';
        $type = 'text';
        $class = shortcode_add_class('textbox');
        break;
    }

    return theme('shortcode_quizinput', array(
        'class' => $class,
        'tag' => $tag,
        'type' => $type,
        'name' => 'ans',
        'text' => $text,
        )
    );
}

/**
 * Provides theme for quizinput Shortcode.
 */
function theme_shortcode_quizinput($vars) {

    $type = empty($vars['type']) ? '' : ' type="' . $vars['type'] . '"';
    $name = empty($vars['name']) ? '' : ' name="' . $vars['name'] . '"';
    $class = empty($vars['class']) ? '' : ' class="' . $vars['class'] . '"';
    $style = empty($vars['style']) ? '' : ' style="' . $vars['style'] . '"';

    $html = '<' . $vars['tag'] . $type . $name . $class . $style . '>';
    if($vars['text']) $html .= $vars['text'] . '</' . $vars['tag'] . '>';

    return $html;
}


